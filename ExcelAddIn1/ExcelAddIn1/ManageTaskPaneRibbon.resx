<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toggleButton1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toggleButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AgHHfH39A6Pij8vjDzpJAAAAAElFTkSuQmCC
</value>
  </data>
</root>